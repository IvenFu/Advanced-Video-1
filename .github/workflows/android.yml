name: Advanced Video - Android 
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  build_screen_share_java:
    name: Build Screen Share - Java
    runs-on: macos-latest
    env:
      APP_KEY_FILE_PATH: ${{ './app/src/main/res/values/app_key.xml' }}
      WRITE_APP_KEY_SCRIPT_PATH: ${{ '../../Shared Files/Android/write_app_key.py' }}
      ENCRYPTED_KEYSTORE_PATH: ${{ '../../Shared Files/Android/release.jks.gpg' }}
      DECRYPTED_KEYSTORE_PATH: ${{ './release.jks' }}
      UNSIGNED_APK_PATH: ${{ './app/build/outputs/apk/release/app-release-unsigned.apk' }}
      SIGNED_APK_PATH: ${{ './app/build/outputs/apk/release/ScreenShare-Java.apk' }}
      APP_KEY: ${{ secrets.APP_KEY }}
      KEYSTORE_ENC_PWD: ${{ secrets.KEYSTORE_ENC_PWD }}
    defaults:
      run:
        shell: bash
        working-directory: ./ScreenShare/ScreenShare-Android-Java/

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
          python-version: '3.x'

    - name: Write App Key
      run: 
        python "$WRITE_APP_KEY_SCRIPT_PATH" "$APP_KEY_FILE_PATH" $APP_KEY

    - name: Configure Keystore
      run: 
        gpg -d -o "$DECRYPTED_KEYSTORE_PATH" --pinentry-mode=loopback --passphrase "$KEYSTORE_ENC_PWD" "$ENCRYPTED_KEYSTORE_PATH"

    - name: Build APK
      run:
        ./gradlew assembleRelease

    - name: Sign APK
      run:
        $HOME/Library/Android/sdk/build-tools/29.0.3/apksigner sign --ks "$DECRYPTED_KEYSTORE_PATH" --ks-pass pass:$KEYSTORE_ENC_PWD --key-pass pass:$KEYSTORE_ENC_PWD --v1-signing-enabled true --v2-signing-enabled true --in "$UNSIGNED_APK_PATH" --out "$SIGNED_APK_PATH"

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ScreenShare-Java
        path: ./ScreenShare/ScreenShare-Android-Java/app/build/outputs/apk/release/ScreenShare-Java.apk

  build_external_video_java:
    name: Build External Video - Java
    runs-on: macos-latest
    env:
      APP_KEY_FILE_PATH: ${{ './app/src/main/res/values/app_key.xml' }}
      WRITE_APP_KEY_SCRIPT_PATH: ${{ '../../Shared Files/Android/write_app_key.py' }}
      ENCRYPTED_KEYSTORE_PATH: ${{ '../../Shared Files/Android/release.jks.gpg' }}
      DECRYPTED_KEYSTORE_PATH: ${{ './release.jks' }}
      UNSIGNED_APK_PATH: ${{ './app/build/outputs/apk/release/app-release-unsigned.apk' }}
      SIGNED_APK_PATH: ${{ './app/build/outputs/apk/release/ExternalVideo-Java.apk' }}
      APP_KEY: ${{ secrets.APP_KEY }}
      KEYSTORE_ENC_PWD: ${{ secrets.KEYSTORE_ENC_PWD }}
    defaults:
      run:
        shell: bash
        working-directory: ./ExternalVideo/ExternalVideo-Android-Java/

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Write App Key
        run:
          python "$WRITE_APP_KEY_SCRIPT_PATH" "$APP_KEY_FILE_PATH" $APP_KEY

      - name: Configure Keystore
        run:
          gpg -d -o "$DECRYPTED_KEYSTORE_PATH" --pinentry-mode=loopback --passphrase "$KEYSTORE_ENC_PWD" "$ENCRYPTED_KEYSTORE_PATH"

      - name: Build APK
        run:
          ./gradlew assembleRelease

      - name: Sign APK
        run:
          $HOME/Library/Android/sdk/build-tools/29.0.3/apksigner sign --ks "$DECRYPTED_KEYSTORE_PATH" --ks-pass pass:$KEYSTORE_ENC_PWD --key-pass pass:$KEYSTORE_ENC_PWD --v1-signing-enabled true --v2-signing-enabled true --in "$UNSIGNED_APK_PATH" --out "$SIGNED_APK_PATH"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ExternalVideo-Java
          path: ./ExternalVideo/ExternalVideo-Android-Java/app/build/outputs/apk/release/ExternalVideo-Java.apk

  build_av_manage_java:
    name: Build AV Manage - Java
    runs-on: macos-latest
    env:
      APP_KEY_FILE_PATH: ${{ './app/src/main/res/values/app_key.xml' }}
      WRITE_APP_KEY_SCRIPT_PATH: ${{ '../../Shared Files/Android/write_app_key.py' }}
      ENCRYPTED_KEYSTORE_PATH: ${{ '../../Shared Files/Android/release.jks.gpg' }}
      DECRYPTED_KEYSTORE_PATH: ${{ './release.jks' }}
      UNSIGNED_APK_PATH: ${{ './app/build/outputs/apk/release/app-release-unsigned.apk' }}
      SIGNED_APK_PATH: ${{ './app/build/outputs/apk/release/AVManage-Java.apk' }}
      APP_KEY: ${{ secrets.APP_KEY }}
      KEYSTORE_ENC_PWD: ${{ secrets.KEYSTORE_ENC_PWD }}
    defaults:
      run:
        shell: bash
        working-directory: ./DeviceManager/AVManage-Android-Java/

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Write App Key
        run:
          python "$WRITE_APP_KEY_SCRIPT_PATH" "$APP_KEY_FILE_PATH" $APP_KEY

      - name: Configure Keystore
        run:
          gpg -d -o "$DECRYPTED_KEYSTORE_PATH" --pinentry-mode=loopback --passphrase "$KEYSTORE_ENC_PWD" "$ENCRYPTED_KEYSTORE_PATH"

      - name: Build APK
        run:
          ./gradlew assembleRelease

      - name: Sign APK
        run:
          $HOME/Library/Android/sdk/build-tools/29.0.3/apksigner sign --ks "$DECRYPTED_KEYSTORE_PATH" --ks-pass pass:$KEYSTORE_ENC_PWD --key-pass pass:$KEYSTORE_ENC_PWD --v1-signing-enabled true --v2-signing-enabled true --in "$UNSIGNED_APK_PATH" --out "$SIGNED_APK_PATH"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: AVManage-Java
          path: ./DeviceManager/AVManage-Android-Java/app/build/outputs/apk/release/AVManage-Java.apk

  build_video_stream_java:
    name: Build Video Stream - Java
    runs-on: macos-latest
    env:
      APP_KEY_FILE_PATH: ${{ './app/src/main/res/values/app_key.xml' }}
      WRITE_APP_KEY_SCRIPT_PATH: ${{ '../../Shared Files/Android/write_app_key.py' }}
      ENCRYPTED_KEYSTORE_PATH: ${{ '../../Shared Files/Android/release.jks.gpg' }}
      DECRYPTED_KEYSTORE_PATH: ${{ './release.jks' }}
      UNSIGNED_APK_PATH: ${{ './app/build/outputs/apk/release/app-release-unsigned.apk' }}
      SIGNED_APK_PATH: ${{ './app/build/outputs/apk/release/VideoStream-Java.apk' }}
      APP_KEY: ${{ secrets.APP_KEY }}
      KEYSTORE_ENC_PWD: ${{ secrets.KEYSTORE_ENC_PWD }}
    defaults:
      run:
        shell: bash
        working-directory: ./VideoStream/VideoStream-Android-Java2/

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Write App Key
        run:
          python "$WRITE_APP_KEY_SCRIPT_PATH" "$APP_KEY_FILE_PATH" $APP_KEY

      - name: Configure Keystore
        run:
          gpg -d -o "$DECRYPTED_KEYSTORE_PATH" --pinentry-mode=loopback --passphrase "$KEYSTORE_ENC_PWD" "$ENCRYPTED_KEYSTORE_PATH"

      - name: Build APK
        run:
          ./gradlew assembleRelease

      - name: Sign APK
        run:
          $HOME/Library/Android/sdk/build-tools/29.0.3/apksigner sign --ks "$DECRYPTED_KEYSTORE_PATH" --ks-pass pass:$KEYSTORE_ENC_PWD --key-pass pass:$KEYSTORE_ENC_PWD --v1-signing-enabled true --v2-signing-enabled true --in "$UNSIGNED_APK_PATH" --out "$SIGNED_APK_PATH"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: VideoStream-Java
          path: ./VideoStream/VideoStream-Android-Java2/app/build/outputs/apk/release/VideoStream-Java.apk

  build_video_stream_java_old:
    name: Build Video-Stream Java
    runs-on: macos-latest
    env:
      CONFIG_FILE_PATH: ${{ './app/src/main/cpp/config.cpp' }}
      CONFIG_STUB_SCRIPT_PATH: ${{ './workflow/config_stub.py' }}
      ENCRYPTED_KEYSTORE_PATH: ${{ './workflow/release.jks.gpg' }}
      DECRYPTED_KEYSTORE_PATH: ${{ './workflow/release.jks' }}
      UNSIGNED_APK_PATH: ${{ './app/build/outputs/apk/release/app-release-unsigned.apk' }}
      SIGNED_APK_PATH: ${{ './app/build/outputs/apk/release/VideoStream-Android-Java.apk' }}
      APP_KEY: ${{ secrets.APP_KEY }}
      STREAM_URL: ${{ secrets.ANDROID_STREAM_URL }}
      KEYSTORE_ENC_PWD: ${{ secrets.KEYSTORE_ENC_PWD }}
    defaults:
      run:
        shell: bash
        working-directory: ./VideoStream/VideoStream-Android-Java/

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: '2.7'

      - name: Config Stub
        run:
          python $CONFIG_STUB_SCRIPT_PATH $CONFIG_FILE_PATH $APP_KEY $STREAM_URL

      - name: Configure Keystore
        run:
          gpg -d -o "$DECRYPTED_KEYSTORE_PATH" --pinentry-mode=loopback --passphrase "$KEYSTORE_ENC_PWD" "$ENCRYPTED_KEYSTORE_PATH"

      - name: Build APK
        run:
          ./gradlew assembleRelease

      - name: Sign APK
        run:
          $HOME/Library/Android/sdk/build-tools/29.0.3/apksigner sign --ks $DECRYPTED_KEYSTORE_PATH --ks-pass pass:$KEYSTORE_ENC_PWD --key-pass pass:$KEYSTORE_ENC_PWD --v1-signing-enabled true --v2-signing-enabled true --in $UNSIGNED_APK_PATH --out $SIGNED_APK_PATH

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: VideoStream-Android-Java
          path: ./VideoStream/VideoStream-Android-Java//app/build/outputs/apk/release/VideoStream-Android-Java.apk

  build_audio_mixing_java:
    name: Build Audio Mixing - Java
    runs-on: macos-latest
    env:
      APP_KEY_FILE_PATH: ${{ './app/src/main/cpp/config.cpp' }}
      WRITE_APP_KEY_SCRIPT_PATH: ${{ '../../Shared Files/Android/write_app_key_cpp.py' }}
      ENCRYPTED_KEYSTORE_PATH: ${{ '../../Shared Files/Android/release.jks.gpg' }}
      DECRYPTED_KEYSTORE_PATH: ${{ './release.jks' }}
      UNSIGNED_APK_PATH: ${{ './app/build/outputs/apk/release/app-release-unsigned.apk' }}
      SIGNED_APK_PATH: ${{ './app/build/outputs/apk/release/AudioMixing-Java.apk' }}
      APP_KEY: ${{ secrets.APP_KEY }}
      KEYSTORE_ENC_PWD: ${{ secrets.KEYSTORE_ENC_PWD }}
    defaults:
      run:
        shell: bash
        working-directory: ./AudioMixing/AudioMixing-Android-Java/

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: '2.7'

      - name: Write App Key
        run:
          python "$WRITE_APP_KEY_SCRIPT_PATH" "$APP_KEY_FILE_PATH" $APP_KEY

      - name: Configure Keystore
        run:
          gpg -d -o "$DECRYPTED_KEYSTORE_PATH" --pinentry-mode=loopback --passphrase "$KEYSTORE_ENC_PWD" "$ENCRYPTED_KEYSTORE_PATH"

      - name: Build APK
        run:
          ./gradlew assembleRelease

      - name: Sign APK
        run:
          $HOME/Library/Android/sdk/build-tools/29.0.3/apksigner sign --ks "$DECRYPTED_KEYSTORE_PATH" --ks-pass pass:$KEYSTORE_ENC_PWD --key-pass pass:$KEYSTORE_ENC_PWD --v1-signing-enabled true --v2-signing-enabled true --in "$UNSIGNED_APK_PATH" --out "$SIGNED_APK_PATH"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: AudioMixing-Java
          path: ./AudioMixing/AudioMixing-Android-Java/app/build/outputs/apk/release/AudioMixing-Java.apk